/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.obscure.CouchbaseTi;
import java.util.Map;
import java.util.HashMap;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import com.couchbase.android.*;
import android.content.ServiceConnection;

@Kroll.module(name="Couchbaseti", id="com.obscure.CouchbaseTi")
public class CouchbasetiModule extends KrollModule implements ICouchbaseDelegate
{

	// Standard Debugging variables
	private static final String LCAT = "CouchbasetiModule";
	private static final boolean DBG = TiConfig.LOGD;
	
	private static final String SERVER_STARTED_EVENT = "com.obscure.couchbase_ti.server_started";
	
	protected static ServiceConnection couchServiceConnection;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	
	public CouchbasetiModule()
	{
		super();
	}

    @Override
    public void couchbaseStarted(String host, int port) {
    	Log.d(LCAT, "started couchbase on "+host+":"+port);
    	Map<String,Object> props = new HashMap<String,Object>();
    	props.put("serverUrl", String.format("http://%s:%d", host, port));
    	fireEvent(SERVER_STARTED_EVENT, props);
    }

    @Override
    public void exit(String error) {
    	Log.d(LCAT, "exited couchbase");
    }
    
	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	@Kroll.method
	public void startCouchbase() {
        CouchbaseMobile couch = new CouchbaseMobile(getActivity().getBaseContext(), this);
        couchServiceConnection = couch.startCouchbase();
	}
}

